services:
  # Base de datos PostgreSQL
  db:
    image: postgres:13
    container_name: odoo14_db
    env_file:
      - environment.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-odoo}
      POSTGRES_USER: ${POSTGRES_USER:-odoo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-odoo}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - odoo_network

  # Servicio Odoo 14
  odoo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: odoo14_app
    depends_on:
      - db
    env_file:
      - environment.env
    environment:
      HOST: db
      USER: ${POSTGRES_USER:-odoo}
      PASSWORD: ${POSTGRES_PASSWORD:-odoo_password_seguro}
      # Variables para pg_dump y herramientas PostgreSQL
      PGHOST: db
      PGUSER: ${POSTGRES_USER:-odoo}
      PGPASSWORD: ${POSTGRES_PASSWORD:-odoo_password_seguro}
      PGPORT: 5432
      PGDATABASE: multiacceso
    volumes:
      - odoo_data:/var/lib/odoo
      - ./config/odoo.conf:/etc/odoo/odoo.conf
      - ./addons:/mnt/extra-addons
      - ./logs:/var/log/odoo
    restart: unless-stopped
    networks:
      - odoo_network
    ports:
      - "8014:8014"

  # Proxy reverso Caddy
  caddy:
    image: caddy:2-alpine
    container_name: odoo14_caddy
    depends_on:
      - odoo
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    networks:
      - odoo_network

  # Servicio opcional para backups automáticos
  # Descomenta si quieres backups automáticos via Docker
  # backup:
  #   image: alpine:latest
  #   container_name: odoo14_backup
  #   depends_on:
  #     - db
  #     - odoo
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data:ro
  #     - odoo_data:/var/lib/odoo:ro
  #     - ./backups:/backups
  #     - ./scripts:/scripts:ro
  #   environment:
  #     - BACKUP_SCHEDULE=0 2 * * *  # Diario a las 2 AM
  #     - POSTGRES_USER=${POSTGRES_USER:-odoo}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-odoo}
  #     - POSTGRES_DB=${POSTGRES_DB:-odoo}
  #   command: |
  #     sh -c '
  #       apk add --no-cache postgresql-client gzip tar &&
  #       echo "$BACKUP_SCHEDULE /scripts/backup.sh" > /etc/crontabs/root &&
  #       crond -f -l 2
  #     '
  #   restart: unless-stopped
  #   networks:
  #     - odoo_network

volumes:
  postgres_data:
  odoo_data:
  caddy_data:
  caddy_config:

networks:
  odoo_network:
    driver: bridge
