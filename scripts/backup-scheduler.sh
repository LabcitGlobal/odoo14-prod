#!/bin/bash

# Script para programar backups automáticos
# Configura crontab para backups regulares

set -e

SCRIPT_DIR="/home/carvajal/Desarrollo/odoo14-prod/scripts"
LOG_DIR="/home/carvajal/Desarrollo/odoo14-prod/logs"

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_question() {
    echo -e "${BLUE}[?]${NC} $1"
}

show_help() {
    echo "Configurador de backups automáticos para Odoo 14"
    echo ""
    echo "Uso: $0 [opción]"
    echo ""
    echo "Opciones:"
    echo "  install     Instalar tareas de backup automático"
    echo "  remove      Remover tareas de backup automático"
    echo "  status      Mostrar estado actual de backups programados"
    echo "  test        Ejecutar backup de prueba"
    echo ""
}

install_backups() {
    log_info "Configurando backups automáticos..."
    
    # Crear directorio de logs si no existe
    mkdir -p "$LOG_DIR"
    
    # Backup completo: Domingos a las 2:00 AM
    FULL_BACKUP_CRON="0 2 * * 0 $SCRIPT_DIR/backup.sh >> $LOG_DIR/backup.log 2>&1"
    
    # Backup de BD: Lunes a Sábado a las 2:00 AM
    DB_BACKUP_CRON="0 2 * * 1-6 $SCRIPT_DIR/backup-db-only.sh >> $LOG_DIR/backup-db.log 2>&1"
    
    # Backup rápido de BD: Cada 4 horas en días laborables
    QUICK_BACKUP_CRON="0 */4 * * 1-5 $SCRIPT_DIR/backup-db-only.sh >> $LOG_DIR/backup-quick.log 2>&1"
    
    # Limpiar logs antiguos: Primer día del mes
    CLEANUP_CRON="0 3 1 * * find $LOG_DIR -name '*.log' -mtime +30 -delete"
    
    log_info "Agregando tareas al crontab..."
    
    # Crear archivo temporal con las nuevas tareas
    TEMP_CRON=$(mktemp)
    
    # Obtener crontab actual (si existe) sin las tareas de Odoo
    crontab -l 2>/dev/null | grep -v "# Odoo Backup" | grep -v "$SCRIPT_DIR" > "$TEMP_CRON" || true
    
    # Agregar nuevas tareas
    cat >> "$TEMP_CRON" << EOF

# Odoo Backup Tasks - Generated by backup-scheduler.sh
# Backup completo semanal (Domingos 2:00 AM)
$FULL_BACKUP_CRON
# Backup de base de datos diario (Lunes-Sábado 2:00 AM)
$DB_BACKUP_CRON
# Backup rápido cada 4 horas (días laborables)
$QUICK_BACKUP_CRON
# Limpiar logs antiguos (primer día del mes)
$CLEANUP_CRON
EOF
    
    # Instalar el nuevo crontab
    crontab "$TEMP_CRON"
    rm "$TEMP_CRON"
    
    log_info "✅ Backups automáticos configurados:"
    log_info "  🔄 Backup completo: Domingos 2:00 AM"
    log_info "  💾 Backup BD diario: Lunes-Sábado 2:00 AM"
    log_info "  ⚡ Backup rápido: Cada 4 horas (días laborables)"
    log_info "  🧹 Limpieza de logs: Primer día del mes"
    echo ""
    log_info "Logs se guardarán en: $LOG_DIR"
}

remove_backups() {
    log_warn "Removiendo backups automáticos..."
    
    # Crear archivo temporal sin las tareas de Odoo
    TEMP_CRON=$(mktemp)
    crontab -l 2>/dev/null | grep -v "# Odoo Backup" | grep -v "$SCRIPT_DIR" > "$TEMP_CRON" || true
    
    # Instalar el crontab limpio
    crontab "$TEMP_CRON"
    rm "$TEMP_CRON"
    
    log_info "✅ Backups automáticos removidos"
}

show_status() {
    log_info "Estado actual de backups programados:"
    echo ""
    
    if crontab -l 2>/dev/null | grep -q "$SCRIPT_DIR"; then
        log_info "✅ Backups automáticos ACTIVOS:"
        echo ""
        crontab -l | grep "$SCRIPT_DIR" | while read line; do
            echo "  $line"
        done
        echo ""
        
        # Mostrar próxima ejecución
        log_info "Próximas ejecuciones programadas:"
        echo "  $(date -d 'next Sunday 2:00' '+%Y-%m-%d %H:%M') - Backup completo"
        echo "  $(date -d 'tomorrow 2:00' '+%Y-%m-%d %H:%M') - Backup de BD"
        
    else
        log_warn "❌ No hay backups automáticos configurados"
        log_info "Ejecuta: $0 install"
    fi
    
    echo ""
    log_info "Últimos backups realizados:"
    ls -la /home/carvajal/Desarrollo/odoo14-prod/backups/*.tar.gz 2>/dev/null | tail -5 || log_warn "No hay backups disponibles"
    
    echo ""
    log_info "Espacio usado por backups:"
    du -sh /home/carvajal/Desarrollo/odoo14-prod/backups/ 2>/dev/null || log_warn "Directorio de backups no existe"
}

test_backup() {
    log_info "Ejecutando backup de prueba..."
    
    if [ -x "$SCRIPT_DIR/backup-db-only.sh" ]; then
        "$SCRIPT_DIR/backup-db-only.sh"
        log_info "✅ Backup de prueba completado"
    else
        log_warn "Script de backup no encontrado o no es ejecutable"
        log_info "Ejecuta: chmod +x $SCRIPT_DIR/*.sh"
    fi
}

# Procesar argumentos
case "${1:-help}" in
    install)
        install_backups
        ;;
    remove)
        remove_backups
        ;;
    status)
        show_status
        ;;
    test)
        test_backup
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "Opción desconocida: $1"
        show_help
        exit 1
        ;;
esac
